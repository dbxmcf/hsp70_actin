#!/bin/bash
#PBS -l nodes=1:ppn=20
#PBS -l walltime=02:30:00
#PBS -q checkpt
#-N bmk
#PBS -j oe
#-A hpc_hpcadmin5
#PBS -A loni_loniadmin1

cd $PBS_O_WORKDIR/..
module purge
#module load python/3.5.2-anaconda-tensorflow
#module load hdf5/mvapich2.3-pgi-18.7
module load hdf5/1.8.12/INTEL-140-MVAPICH2-2.0

export MV2_ENABLE_AFFINITY=0
export MV2_CPU_BINDING_LEVEL=numanode
#export MV2_CPU_BINDING_POLICY=scatter

NPROCS=$(( $PBS_NUM_NODES*2 ))
#NPROCS=$(( $PBS_NUM_NODES ))
echo "using $NPROCS processes..."
#input_h5="asdf/ta8000.h5"
#input_h5="hdf5t/sample_kinase_phosphatase_protease.h5"
#input_h5="hdf5t/sample_kinase_phosphatase_protease.h5"
input_h5="hdf5t/sample_a-b_mix_2.h5"
#input_h5="hdf5t/sample_hsp70_actin.h5"
#input_h5="asdf/ta4292.h5"

export NPERNODE=2
#threads=(1 5 10 20)

export OMP_NUM_THREADS=1

#export OMP_PLACES=cores
#export OMP_PROC_BIND=true
#export OMP_PLACES=cores 
#export OMP_PROC_BIND=spread

#export OMP_PROC_BIND=true
#export OMP_PLACES=sockets
#export OMP_PLACES=sockets
#export OMP_PLACES={{0},{1},{2},...,{19}}
#export OMP_PLACES={{0},{1},{2},{3},{4},{5},{6},{7},{8},{9},{10},{11},{12},{13},{14},{15},{16},{17},{18},{19}}
#export OMP_PLACES={{0},{1},{2},{3},{4},{5},{6},{7},{8},{9},{10},{11},{12},{13},{14},{15},{16},{17},{18},{19}}
#export OMP_PROC_BIND=false
#    -bind-to socket \
#for trd in "${threads[@]}"
#for trd in 1 5 10 15 20
#for trd in 1 2 5 10 20

#export MP_BIND=yes
#export MP_BLIST=0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19

for trd in 5 10 10 10
do
    OMP_NUM_THREADS=${trd}
    SECONDS=0
    #mpirun --bind-to none -np $NPROCS -machinefile $PBS_NODEFILE -x OMP_NUM_THREADS -npernode $NPERNODE ./pgi.mpi.pomp.out -f $input_h5 
    #mpirun --report-bindings -bynode --mca btl_openib_allow_ib true -np $NPROCS -machinefile $PBS_NODEFILE -x OMP_NUM_THREADS -npernode $NPERNODE ./pgi.mpi.pomp.out -f $input_h5 
    mpirun -np $NPROCS -f $PBS_NODEFILE \
    -ppn $NPERNODE \
    ./intel.mpi.iomp.out -f $input_h5 #2>&1 > log
    echo "omp run trd=$OMP_NUM_THREADS, $SECONDS sec"
done

#export OMP_NUM_THREADS=2
#SECONDS=0
#mpirun --report-bindings --bind-to-socket -np $NPROCS -x OMP_NUM_THREADS -npernode $NPERNODE ./pgi.mpi.pomp.out -f $input_h5
#echo "omp run $i trd=$OMP_NUM_THREADS, $SECONDS sec"
#
#export OMP_NUM_THREADS=5
#SECONDS=0
#mpirun --report-bindings --bind-to-socket -np $NPROCS -x OMP_NUM_THREADS -npernode $NPERNODE ./pgi.mpi.pomp.out -f $input_h5
#echo "omp run $i trd=$OMP_NUM_THREADS, $SECONDS sec"
#
#export OMP_NUM_THREADS=10
#SECONDS=0
#mpirun --report-bindings --bind-to-socket -np $NPROCS -x OMP_NUM_THREADS -npernode $NPERNODE ./pgi.mpi.pomp.out -f $input_h5
#echo "omp run $i trd=$OMP_NUM_THREADS, $SECONDS sec"

#export OMP_NUM_THREADS=20
#SECONDS=0
#mpirun -np $NPROCS -machinefile $PBS_NODEFILE -x OMP_NUM_THREADS -npernode 2 ./pgi.mpi.pomp.out -f $input_h5
#mpirun -np $NPROCS -f $PBS_NODEFILE -ppn 2 ./pgi.mpi.pomp.out -f $input_h5
#echo "omp run $i trd=$OMP_NUM_THREADS, $SECONDS sec"

#export OMP_NUM_THREADS=1
#SECONDS=0
#mpirun -np $NPROCS -machinefile $PBS_NODEFILE -x OMP_NUM_THREADS -npernode 2 ./pgi.mpi.pacc.out -f $input_h5
##mpirun -np $NPROCS -f $PBS_NODEFILE -ppn 2 ./pgi.mpi.pacc.out -f $input_h5
#echo "gpu run , $SECONDS sec"

#python rebuild_mat.py -f $input_h5 -csv #-validate

